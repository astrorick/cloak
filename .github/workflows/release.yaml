name: Release Binaries

on:
  push:
    tags:
      - 'v*' # triggers on any release tag push

jobs:
  build-and-release:
    name: Build and Upload Binary Archives
    runs-on: ubuntu-latest

    permissions:
      contents: write # required to upload release assets

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'

      - name: Get tag name
        id: vars
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build and compress binaries
        env:
          TAG: ${{ env.TAG }}
        run: |
          mkdir -p dist

          build_and_package() {
            local GOOS=$1
            local GOARCH=$2
            local EXT=$3
            local BINNAME=cloak${EXT}
            local ARCHIVE_NAME=cloak-${TAG}-${GOOS}-${GOARCH}.zip
            local OUTPUT_DIR=build/${GOOS}-${GOARCH}

            mkdir -p ${OUTPUT_DIR}

            echo "Building for $GOOS/$GOARCH..."
            GOOS=$GOOS GOARCH=$GOARCH go build -o ${OUTPUT_DIR}/${BINNAME} cmd/cloak/main.go

            echo "Packaging ${ARCHIVE_NAME}..."
            zip -j dist/${ARCHIVE_NAME} ${OUTPUT_DIR}/${BINNAME}
          }

          # Linux
          build_and_package linux amd64 ""
          build_and_package linux arm64 ""

          # Windows
          build_and_package windows amd64 ".exe"

          # Mac
          build_and_package darwin amd64 ""
          build_and_package darwin arm64 ""

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: Cloak ${{ env.TAG }}
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
